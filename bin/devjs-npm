#!/bin/bash
#
# Copyright (c) 2018, Arm Limited and affiliates.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
    SELF="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done

SELF="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

if [ -z "$NPM_EXEC" ]; then NPM_EXEC="npm"; fi
command -v $NPM_EXEC > /dev/null
status=$?
if [ $status -ne 0 ]; then
    echo "No \"npm\" exec found."
fi

if [ -f "package.json" ]; then
    echo "has package.json. Using..."
    $NPM_EXEC "$@"
else
    if [ -f "devicejs.json" ]; then
	cp devicejs.json package.json
	$NPM_EXEC "$@"
	rm -f package.json
    else
	echo "No devicejs.json in this directory"
    fi
fi

